from dataclasses import field
from enum import StrEnum
from typing import List
from pydantic import ConfigDict, RootModel
from pydantic.dataclasses import dataclass

class VideoLengths(StrEnum):
    """Video lengths"""
    SHORT = "SHORT"
    MID = "MID"
    LONG = "LONG"
    EXTRA_LONG = "EXTRA_LONG"


class RegionCodes(StrEnum):
    """Region codes"""
    FR = "FR"
    TH = "TH"
    MM = "MM"
    BD = "BD"
    IT = "IT"
    NP = "NP"
    IQ = "IQ"
    BR = "BR"
    US = "US"
    KW = "KW"
    VN = "VN"
    AR = "AR"
    KZ = "KZ"
    GB = "GB"
    UA = "UA"
    TR = "TR"
    ID = "ID"
    PK = "PK"
    NG = "NG"
    KH = "KH"
    PH = "PH"
    EG = "EG"
    QA = "QA"
    MY = "MY"
    ES = "ES"
    JO = "JO"
    MA = "MA"
    SA = "SA"
    TW = "TW"
    AF = "AF"
    EC = "EC"
    MX = "MX"
    BW = "BW"
    JP = "JP"
    LT = "LT"
    TN = "TN"
    RO = "RO"
    LY = "LY"
    IL = "IL"
    DZ = "DZ"
    CG = "CG"
    GH = "GH"
    DE = "DE"
    BJ = "BJ"
    SN = "SN"
    SK = "SK"
    BY = "BY"
    NL = "NL"
    LA = "LA"
    BE = "BE"
    DO = "DO"
    TZ = "TZ"
    LK = "LK"
    NI = "NI"
    LB = "LB"
    IE = "IE"
    RS = "RS"
    HU = "HU"
    PT = "PT"
    GP = "GP"
    CM = "CM"
    HN = "HN"
    FI = "FI"
    GA = "GA"
    BN = "BN"
    SG = "SG"
    BO = "BO"
    GM = "GM"
    BG = "BG"
    SD = "SD"
    TT = "TT"
    OM = "OM"
    FO = "FO"
    MZ = "MZ"
    ML = "ML"
    UG = "UG"
    RE = "RE"
    PY = "PY"
    GT = "GT"
    CI = "CI"
    SR = "SR"
    AO = "AO"
    AZ = "AZ"
    LR = "LR"
    CD = "CD"
    HR = "HR"
    SV = "SV"
    MV = "MV"
    GY = "GY"
    BH = "BH"
    TG = "TG"
    SL = "SL"
    MK = "MK"
    KE = "KE"
    MT = "MT"
    MG = "MG"
    MR = "MR"
    PA = "PA"
    IS = "IS"
    LU = "LU"
    HT = "HT"
    TM = "TM"
    ZM = "ZM"
    CR = "CR"
    NO = "NO"
    AL = "AL"
    ET = "ET"
    GW = "GW"
    AU = "AU"
    KR = "KR"
    UY = "UY"
    JM = "JM"
    DK = "DK"
    AE = "AE"
    MD = "MD"
    SE = "SE"
    MU = "MU"
    SO = "SO"
    CO = "CO"
    AT = "AT"
    GR = "GR"
    UZ = "UZ"
    CL = "CL"
    GE = "GE"
    PL = "PL"
    CA = "CA"
    CZ = "CZ"
    ZA = "ZA"
    AI = "AI"
    VE = "VE"
    KG = "KG"
    PE = "PE"
    CH = "CH"
    LV = "LV"
    PR = "PR"
    NZ = "NZ"
    TL = "TL"
    BT = "BT"
    MN = "MN"
    FJ = "FJ"
    SZ = "SZ"
    VU = "VU"
    BF = "BF"
    TJ = "TJ"
    BA = "BA"
    AM = "AM"
    TD = "TD"
    SI = "SI"
    CY = "CY"
    MW = "MW"
    EE = "EE"
    XK = "XK"
    ME = "ME"
    KY = "KY"
    YE = "YE"
    LS = "LS"
    ZW = "ZW"
    MC = "MC"
    GN = "GN"
    BS = "BS"
    PF = "PF"
    NA = "NA"
    VI = "VI"
    BB = "BB"
    BZ = "BZ"
    CW = "CW"
    PS = "PS"
    FM = "FM"
    PG = "PG"
    BI = "BI"
    AD = "AD"
    TV = "TV"
    GL = "GL"
    KM = "KM"
    AW = "AW"
    TC = "TC"
    CV = "CV"
    MO = "MO"
    VC = "VC"
    NE = "NE"
    WS = "WS"
    MP = "MP"
    DJ = "DJ"
    RW = "RW"
    AG = "AG"
    GI = "GI"
    GQ = "GQ"
    AS = "AS"
    AX = "AX"
    TO = "TO"
    KN = "KN"
    LC = "LC"
    NC = "NC"
    LI = "LI"
    SS = "SS"
    IR = "IR"
    SY = "SY"
    IM = "IM"
    SC = "SC"
    VG = "VG"
    SB = "SB"
    DM = "DM"
    KI = "KI"
    UM = "UM"
    SX = "SX"
    GD = "GD"
    MH = "MH"
    BQ = "BQ"
    YT = "YT"
    ST = "ST"
    CF = "CF"
    BM = "BM"
    SM = "SM"
    PW = "PW"
    GU = "GU"
    HK = "HK"
    IN = "IN"
    CK = "CK"
    AQ = "AQ"
    WF = "WF"
    JE = "JE"
    MQ = "MQ"
    CN = "CN"
    GF = "GF"
    MS = "MS"
    GG = "GG"
    TK = "TK"
    FK = "FK"
    PM = "PM"
    NU = "NU"
    MF = "MF"
    ER = "ER"
    NF = "NF"
    VA = "VA"
    IO = "IO"
    SH = "SH"
    BL = "BL"
    CU = "CU"
    NR = "NR"
    TP = "TP"
    BV = "BV"
    EH = "EH"
    PN = "PN"
    TF = "TF"
    RU = "RU"

class Fields(StrEnum):
    """Fields to query"""
    create_date = "create_date"
    username = "username"
    region_code = "region_code"
    video_id = "video_id"
    hashtag_name = "hashtag"
    keyword = "keyword"
    music_id = "music_id"
    effect_id = "effect_id"
    video_length = "video_length"


class Operators(StrEnum):
    """Operators to use in query"""
    equals = "EQ"
    isin = "IN"
    greater = "GT"
    greater_equals = "GTE"
    larger = "LT"
    larger_equals = "LTE"


@dataclass
class Condition:
    """TikTok Research API Query Condition

    Args
    ----
    field_name: Fields
        Field to query
    operation: Operators
        Operator to use
    field_value: Union[str, int, List[str]]
        Value to compare against
    """

    field_name: Fields
    operation: Operators
    field_values: List[str]

    def __post_init__(self):
        if self.operation == "EQ" and len(self.field_values) != 1:
            raise ValueError("EQ operation must have one field value")
        if self.operation == "IN" and self.field_name == "username" and len(self.field_values) >= 100:
            raise ValueError("IN operation on username must have less than equal 100 field values")


@dataclass(config=ConfigDict(alias_generator=lambda x: x.removesuffix("_")))
class Query:
    """TikTok Research API Query

    Args
    ----

    and_: List[Condition]
        List of conditions that must all be true
    or_: List[Condition]
        List of conditions where at least one must be true
    not_: List[Condition]
        List of conditions that must all be false
    """

    and_: List[Condition] = field(default_factory=list)
    or_: List[Condition] = field(default_factory=list)
    not_: List[Condition] = field(default_factory=list)


def as_dict(query: Query):
    """Convert Query object to dictionary"""
    return RootModel(query).model_dump(by_alias=True)
